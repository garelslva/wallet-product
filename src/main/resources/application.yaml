server:
  port: ${PORT:8073}

retry:
  shouldRetry: true

spring:
  application:
    name: wallet-service

  # Configuração do PostgreSQL com R2DBC
  r2dbc:
    url: r2dbc:postgresql://${DATABASE_URL:postgres.server.com}/${DATABASE_NAME:wallet}
    username: ${DATABASE_USER:wallet}
    password: ${DATABASE_PASSWORD:wallet_pass}
    pool:
      initial-size: 2
      max-size: 3
      max-idle-time: 30m
      acquire-retry-attempts: 3
      acquire-retry-delay: 2000ms
      validation-query: SELECT 1

  sql:
    init:
      mode: always
      schema-locations: ${DATABASE_SQL_SCHEMA_FILE_PATH:classpath:sql/schema.sql}

  # Configuração do Redis Reativo
  data:
    redis:
      host: ${REDIS_URL:redis.server.com}
      port: ${REDIS_PORT:6379}

  # Configuração do Kafka
  kafka:
    bootstrap-servers: ${KAFKA_URL_AND_PORT:localhost:9092}
    consumer:
      group-id: wallet-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

  # Configuração do Actuator para monitoramento
  management:
    endpoints:
      web:
        exposure:
          include: health,metrics,info,prometheus
    endpoint:
      health:
        show-details: always
    metrics:
      export:
        prometheus:
          enabled: true
          uri: ${PROMETHEUS_URL:http://localhost:8086}
          db: metrics

# Configuração do OpenAPI para documentação da API
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path:/swagger-ui.html

logging:
  level:
    root: ${LEVEL_LOGGING:INFO}
    org.springframework.web: ${LEVEL_LOGGING:INFO}
    org.springframework.r2dbc: ${LEVEL_LOGGING:INFO}
    org.springframework.data.redis: ${LEVEL_LOGGING:INFO}
    org.apache.kafka: ${KAFKA_LEVEL_LOGGING:WARN}
    io.micrometer: ${MICROMETER_LEVEL_LOGGING:WARN}